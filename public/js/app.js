"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["/js/app"],{

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bootstrap */ "./resources/js/bootstrap.js");

window.addEventListener("DOMContentLoaded", function (e) {
  this.window.showPassword = function showPassword(id) {
    var password = document.getElementById(id);
    if (password.type === "password") {
      password.type = "text";
    } else {
      password.type = "password";
    }
  };
  this.window.addListItem = function addListItem() {
    var listUOM = document.getElementById('uom').value;
    var finalIElement = document.getElementById('final-i');
    var itemTable = document.getElementById('item-table-body');
    var finalI = finalIElement.value;
    finalIElement.value = +finalI + 1;
    var row = document.createElement("tr");

    // Create cells and input elements.
    var cell0 = document.createElement("th");
    cell0.scope = 'row';
    cell0.innerHTML = finalI;
    var cell1 = document.createElement("td");
    var counter = document.createElement("input");
    counter.type = "hidden";
    counter.name = "id[]";
    counter.id = 'id-' + finalI;
    counter.value = finalI;
    counter.setAttribute('data-column-name', 'id');
    var itemName = createListItemInput('text', 'itemName', finalI, 'item_name');
    itemName.placeholder = 'Item Name';
    itemName.classList.add('form-control');
    // itemName.onclick = '';

    var cell2 = document.createElement("td");
    var itemWeight = createListItemInput('number', 'itemWeight', finalI, 'item_weight');
    itemWeight.value = 0;
    itemWeight.classList.add('for-weight');
    itemWeight.classList.add('number-input');
    itemWeight.classList.add('form-control');
    cell2.classList.add('number-col');

    //for radios on click-> getConversionRate();.
    //add pounds and kilos?
    //set total label on click
    var cell3 = document.createElement("td");
    var ouncesRadio;
    var poundsRadio;
    var gramsRadio;
    var kilosRadio;
    var ouncesRadioLabel;
    var poundsRadioLabel;
    var gramsRadioLabel;
    var kilosRadioLabel;
    if (listUOM === 'us') {
      ouncesRadio = createRadio('in_ounces', '', 'oz', finalI);
      ouncesRadioLabel = createLabel('OZ', 'uom-oz-' + finalI, 'oz', finalI);
      poundsRadio = createRadio('in_pounds', '', 'lbs', finalI);
      poundsRadioLabel = createLabel('LBS', 'uom-lbs-' + finalI, 'lbs', finalI);
    } else {
      gramsRadio = createRadio('in_grams', '', 'gram', finalI);
      gramsRadioLabel = createLabel('Grams', 'uom-gram-' + finalI, 'gram', finalI);
      kilosRadio = createRadio('in_kg', '', 'kg', finalI);
      kilosRadioLabel = createLabel('KG', 'uom-kg-' + finalI, 'kg', finalI);
    }
    var cell4 = document.createElement("td");
    cell4.classList.add('number-col');
    var packedAmount = createListItemInput('number', 'packedAmount', finalI, 'amount');
    packedAmount.value = 1;
    packedAmount.classList.add('for-weight');
    packedAmount.classList.add('number-input');
    packedAmount.classList.add('form-control');
    var cell5 = document.createElement("td");
    cell5.classList.add('number-col');
    var totalLineWeight = createListItemInput('number', 'totalLineWeight', finalI, 'total_line_weight');
    totalLineWeight.value = 0; //getLineTotalWeight();
    totalLineWeight.setAttribute('data-column-name', 'total_line_weight');
    totalLineWeight.setAttribute('readonly', true);
    totalLineWeight.classList.add('number-input');
    totalLineWeight.classList.add('form-control');

    //append inputs to cells.
    cell1.appendChild(counter);
    cell1.appendChild(itemName);
    cell2.appendChild(itemWeight);
    var selectCell = document.createElement("td");
    var categorySelect = getCategroySelect(finalI);
    selectCell.append(categorySelect);
    if (listUOM === 'us') {
      cell3.appendChild(ouncesRadio);
      cell3.appendChild(ouncesRadioLabel);
      cell3.appendChild(poundsRadio);
      cell3.appendChild(poundsRadioLabel);
    } else {
      cell3.appendChild(gramsRadio);
      cell3.appendChild(gramsRadioLabel);
      cell3.appendChild(kilosRadio);
      cell3.appendChild(kilosRadioLabel);
    }
    cell4.appendChild(packedAmount);
    cell5.appendChild(totalLineWeight);

    // Append cells to the row.
    row.appendChild(cell0);
    row.appendChild(cell1);
    row.appendChild(selectCell);
    row.appendChild(cell2);
    row.appendChild(cell4);
    row.appendChild(cell5);
    row.appendChild(cell3);

    // Append the row to the table.
    itemTable.appendChild(row);

    //add function to calculate total weight.
    var neededForWeights = document.querySelectorAll('.for-weight');
    neededForWeights.forEach(function (neededForWeight) {
      neededForWeight.addEventListener('change', function () {
        getLineTotalWeight(finalI);
      });
    });
  };
  this.window.updateUOM = function updateUOM(value) {
    if (value !== 'us') {
      usRadioToMetric();
    } else {
      metricRadioToUs();
    }
  };
  function getLineTotalWeight(row) {
    var weight = document.getElementById('itemWeight-' + row).value;
    var packedAmount = document.getElementById('packedAmount-' + row).value;
    var lineTotal = 0;
    lineTotal = +weight * +packedAmount;
    lineTotal = Math.round((lineTotal + Number.EPSILON) * 100) / 100;
    document.getElementById('totalLineWeight-' + row).value = lineTotal;
  }
  function createListItemInput(type, nameBase, row, columnName) {
    var element = document.createElement("input");
    element.type = type;
    element.name = nameBase + "[]";
    element.id = nameBase + '-' + row;
    element.value = '';
    element.setAttribute('data-column-name', columnName);
    return element;
  }
  function getCategroySelect(row) {
    var values = ['', 'clothes', 'worn_clothes', 'rain_gear', 'packs', 'consumables', 'shelter', 'fire_and_water_treatment', 'luxury_item', 'tech'];
    var texts = ['Choose', 'Clothes', 'Worn Clothes', 'Rain Gear', 'Packs', 'Consumbables', 'Shelter', 'Fire and Water Treatment', 'Luxury Item', 'Tech'];
    var select = document.createElement("select");
    select.id = 'ItemCategory-' + row;
    select.name = 'itemCategory-' + row;
    select.setAttribute('data-column-name', 'item_category');
    select.className = 'form-control';
    for (var i = 0; i < values.length; i++) {
      var option = document.createElement("option");
      option.value = values[i];
      option.text = texts[i];
      select.appendChild(option);
    }
    return select;
  }
  function metricRadioToUs() {
    var inputElements = document.querySelectorAll('.metric-radio');
    inputElements.forEach(function (inputElement) {
      var idArr = inputElement.id.split('-');
      var uom = idArr[1];
      var row = idArr[idArr.length - 1];
      var elementType = inputElement.type;
      var elementTag = inputElement.tagName.toLowerCase();
      var newElement;
      if (elementType === 'radio' && uom === 'gram') {
        newElement = createRadio('in_ounces', 'OZ', 'oz', row, true);
      } else if (elementType === 'radio' && uom === 'kg') {
        newElement = createRadio('in_pounds', 'LBS', 'lbs', row);
      } else if (elementTag === 'label' && uom === 'gram') {
        newElement = createLabel('OZ', 'uom-oz-' + row, 'oz', row);
      } else if (elementTag === 'label' && uom === 'kg') {
        newElement = createLabel('LBS', 'uom-lbs-' + row, 'lbs', row);
      }
      if (newElement) {
        inputElement.parentElement.replaceChild(newElement, inputElement);
      }
    });
  }
  function usRadioToMetric() {
    var inputElements = document.querySelectorAll('.us-radio');
    inputElements.forEach(function (inputElement) {
      var idArr = inputElement.id.split('-');
      var uom = idArr[1];
      var row = idArr[idArr.length - 1];
      var elementType = inputElement.type;
      var elementTag = inputElement.tagName.toLowerCase();
      var newElement;
      if (elementType === 'radio' && uom === 'oz') {
        newElement = createRadio('in_grams', 'Grams', 'gram', row);
      } else if (elementType === 'radio' && uom === 'lbs') {
        newElement = createRadio('in_kg', 'KG', 'kg', row);
      } else if (elementTag === 'label' && uom === 'oz') {
        newElement = createLabel('Grams', 'uom-gram-' + row, 'gram', row);
      } else if (elementTag === 'label' && uom === 'lbs') {
        newElement = createLabel('KG', 'uom-kg-' + row, 'kg', row);
      }
      if (newElement) {
        inputElement.parentElement.replaceChild(newElement, inputElement);
      }
    });
  }
  function createRadio(dataColumnName, label, uom, row) {
    var radio = document.createElement("input");
    radio.className = 'form-check-input' + (uom === 'gram' || uom === 'kg' ? ' metric-radio' : ' us-radio');
    radio.type = "radio";
    radio.name = "uom-" + row + "[]";
    radio.id = 'uom-' + uom + '-' + row;
    radio.setAttribute('data-column-name', dataColumnName);
    if (uom === 'gram' || uom === 'oz') {
      radio.checked = true;
    }
    radio.classList.add('for-weight');
    return radio;
  }
  function createLabel(innerHtml, htmlFor, uom, row) {
    var label = document.createElement("label");
    label.className = 'form-check-label' + (uom === 'gram' || uom === 'kg' ? ' metric-radio' : ' us-radio');
    label.htmlFor = htmlFor;
    label.innerHTML = innerHtml;
    label.id = 'uom-' + uom + '-label-' + row;
    return label;
  }
  var headers = document.querySelectorAll('.form-collapsible-header');
  headers.forEach(function (header) {
    header.addEventListener('click', function () {
      var content = header.nextElementSibling;
      var arrow = header.querySelector('.form-arrow');
      if (content.classList.contains('open')) {
        content.classList.remove('open');
        content.style.maxHeight = null;
        content.style.padding = '0 10px';
        arrow.innerHTML = '&#9660';
      } else {
        content.classList.add('open');
        content.style.maxHeight = content.scrollHeight + 'px';
        content.style.padding = '10px';
        arrow.innerHTML = '&#9650';
      }
    });
  });
});

/***/ }),

/***/ "./resources/js/bootstrap.js":
/*!***********************************!*\
  !*** ./resources/js/bootstrap.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/lib/axios.js");

window.axios = axios__WEBPACK_IMPORTED_MODULE_0__["default"];
window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["css/app","/js/vendor"], () => (__webpack_exec__("./resources/js/app.js"), __webpack_exec__("./resources/sass/app.scss")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,